Search.setIndex({"alltitles": {"ADAM": [[10, "adam"]], "Activation layers": [[7, "activation-layers"]], "AdaBoostClassifier": [[20, "adaboostclassifier"]], "AdaBoostRegressor": [[20, "adaboostregressor"]], "Available kernels": [[15, "available-kernels"]], "BCE": [[8, "bce"]], "BatchNormalisation": [[7, "batchnormalisation"]], "BernoulliNaiveBayes": [[17, "bernoullinaivebayes"]], "Bidirectional": [[7, "bidirectional"]], "CCE": [[8, "cce"]], "Clustering": [[22, null]], "Combining kernels": [[15, "combining-kernels"]], "Contents:": [[24, null]], "Conv2D": [[7, "conv2d"]], "Core layers": [[7, null]], "Custom exceptions": [[11, null]], "DLL": [[0, null]], "Data": [[1, null]], "DataReader": [[2, null]], "DecisionTree": [[20, "decisiontree"]], "Deep learning": [[5, null]], "Deep learning library documentation": [[24, null]], "Dense": [[7, "dense"]], "Dimensionality reduction": [[23, null]], "Dropout": [[7, "dropout"]], "Elasticnet": [[16, "elasticnet"]], "Exponential": [[8, "exponential"]], "Flatten": [[7, "flatten"]], "Gaussian mixture models": [[22, "gaussian-mixture-models"]], "Gaussian processes": [[14, null]], "GaussianNaiveBayes module": [[17, "gaussiannaivebayes-module"]], "GaussianProcessRegressor": [[14, "gaussianprocessregressor"]], "GradientBoostingClassifier": [[20, "gradientboostingclassifier"]], "GradientBoostingRegressor": [[20, "gradientboostingregressor"]], "GroupNormalisation": [[7, "groupnormalisation"]], "Huber": [[8, "huber"]], "Initialisers": [[6, null]], "InstanceNormalisation": [[7, "instancenormalisation"]], "KMeans": [[22, "kmeans"]], "KNearestNeighborsClassifier": [[18, "knearestneighborsclassifier"]], "KNearestNeighborsRegressor": [[18, "knearestneighborsregressor"]], "Kaiming He": [[6, "kaiming-he"]], "Kernels": [[15, null]], "LBFGS": [[10, "lbfgs"]], "LSTM": [[7, "lstm"]], "LassoRegression": [[16, "lassoregression"]], "LayerNormalisation": [[7, "layernormalisation"]], "Linear models": [[16, null]], "LinearRegression": [[16, "linearregression"]], "LogisticRegression": [[16, "logisticregression"]], "Losses": [[8, null]], "MAE": [[8, "mae"]], "MSE": [[8, "mse"]], "MachineLearning": [[12, null]], "MaxPooling2D": [[7, "maxpooling2d"]], "Metrics": [[3, null]], "Models": [[9, null]], "MultinomialNaiveBayes module": [[17, "multinomialnaivebayes-module"]], "Naive Bayes": [[17, null]], "Neighbors": [[18, null]], "Optimisers": [[10, null]], "PCA": [[23, "pca"]], "Preprocessing": [[4, null]], "RNN": [[7, "rnn"]], "RandomForestClassifier": [[20, "randomforestclassifier"]], "RandomForestRegressor": [[20, "randomforestregressor"]], "ReLU": [[7, "relu"]], "RegressionTree": [[20, "regressiontree"]], "Regularisation layers": [[7, "regularisation-layers"]], "Reshape": [[7, "reshape"]], "RidgeRegression": [[16, "ridgeregression"]], "SARIMA": [[16, "sarima"]], "SGD": [[10, "sgd"]], "SVC": [[19, "svc"]], "SVR": [[19, "svr"]], "Sigmoid": [[7, "sigmoid"]], "SoftMax": [[7, "softmax"]], "Spectral clustering": [[22, "spectral-clustering"]], "Supervised learning": [[13, null]], "Support vector machines": [[19, null]], "Tanh": [[7, "tanh"]], "The return shapes of the method depending on the parameters.": [[7, "id11"], [7, "id12"]], "Time series": [[16, "time-series"]], "Trees": [[20, null]], "UnsupervisedLearning": [[21, null]], "XGBoostingClassifier": [[20, "xgboostingclassifier"]], "XGBoostingRegressor": [[20, "xgboostingregressor"]], "Xavier Glorot": [[6, "xavier-glorot"]]}, "docnames": ["api/DLL", "api/DLL.Data", "api/DLL.Data.DataReader", "api/DLL.Data.Metrics", "api/DLL.Data.Preprocessing", "api/DLL.DeepLearning", "api/DLL.DeepLearning.Initialisers", "api/DLL.DeepLearning.Layers", "api/DLL.DeepLearning.Losses", "api/DLL.DeepLearning.Models", "api/DLL.DeepLearning.Optimisers", "api/DLL.Exceptions", "api/DLL.MachineLearning", "api/DLL.MachineLearning.SupervisedLearning", "api/DLL.MachineLearning.SupervisedLearning.GaussianProcesses", "api/DLL.MachineLearning.SupervisedLearning.Kernels", "api/DLL.MachineLearning.SupervisedLearning.LinearModels", "api/DLL.MachineLearning.SupervisedLearning.NaiveBayes", "api/DLL.MachineLearning.SupervisedLearning.Neighbors", "api/DLL.MachineLearning.SupervisedLearning.SupportVectorMachines", "api/DLL.MachineLearning.SupervisedLearning.Trees", "api/DLL.MachineLearning.UnsupervisedLearning", "api/DLL.MachineLearning.UnsupervisedLearning.Clustering", "api/DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\DLL.rst", "api\\DLL.Data.rst", "api\\DLL.Data.DataReader.rst", "api\\DLL.Data.Metrics.rst", "api\\DLL.Data.Preprocessing.rst", "api\\DLL.DeepLearning.rst", "api\\DLL.DeepLearning.Initialisers.rst", "api\\DLL.DeepLearning.Layers.rst", "api\\DLL.DeepLearning.Losses.rst", "api\\DLL.DeepLearning.Models.rst", "api\\DLL.DeepLearning.Optimisers.rst", "api\\DLL.Exceptions.rst", "api\\DLL.MachineLearning.rst", "api\\DLL.MachineLearning.SupervisedLearning.rst", "api\\DLL.MachineLearning.SupervisedLearning.GaussianProcesses.rst", "api\\DLL.MachineLearning.SupervisedLearning.Kernels.rst", "api\\DLL.MachineLearning.SupervisedLearning.LinearModels.rst", "api\\DLL.MachineLearning.SupervisedLearning.NaiveBayes.rst", "api\\DLL.MachineLearning.SupervisedLearning.Neighbors.rst", "api\\DLL.MachineLearning.SupervisedLearning.SupportVectorMachines.rst", "api\\DLL.MachineLearning.SupervisedLearning.Trees.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.Clustering.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction.rst", "index.rst"], "indexentries": {"accuracy() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.accuracy", false]], "adaboostclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier", false]], "adaboostregressor (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostRegressor", false]], "add() (dll.deeplearning.model.model method)": [[9, "DLL.DeepLearning.Model.Model.add", false]], "adjusted_r2_score() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.adjusted_r2_score", false]], "auc() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.auc", false]], "binary_cross_entropy() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.binary_cross_entropy", false]], "calculate_metrics() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.calculate_metrics", false]], "categorical_cross_entropy() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.categorical_cross_entropy", false]], "classes (dll.machinelearning.supervisedlearning.trees.decisiontree attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.classes", false]], "compile() (dll.deeplearning.model.model method)": [[9, "DLL.DeepLearning.Model.Model.compile", false]], "confidences (dll.machinelearning.supervisedlearning.trees.adaboostclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.confidences", false]], "confusion_matrix() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.confusion_matrix", false]], "decisiontree (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree", false]], "dll.data.metrics": [[3, "module-DLL.Data.Metrics", false]], "dll.deeplearning.model": [[9, "module-DLL.DeepLearning.Model", false]], "exponential_loss() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.exponential_loss", false]], "f1_score() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.f1_score", false]], "fit() (dll.deeplearning.model.model method)": [[9, "DLL.DeepLearning.Model.Model.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.adaboostclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.adaboostregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostRegressor.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.gradientboostingregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.randomforestregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.regressiontree method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.xgboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.xgboostingregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingRegressor.fit", false]], "gradientboostingclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier", false]], "gradientboostingregressor (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor", false]], "huber_loss() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.huber_loss", false]], "mean_absolute_error() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.mean_absolute_error", false]], "mean_squared_error() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.mean_squared_error", false]], "median_absolute_error() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.median_absolute_error", false]], "model (class in dll.deeplearning.model)": [[9, "DLL.DeepLearning.Model.Model", false]], "module": [[3, "module-DLL.Data.Metrics", false], [9, "module-DLL.DeepLearning.Model", false]], "n_classes (dll.machinelearning.supervisedlearning.trees.adaboostclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.n_classes", false]], "n_classes (dll.machinelearning.supervisedlearning.trees.decisiontree attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.n_classes", false]], "n_classes (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.n_classes", false]], "n_classes (dll.machinelearning.supervisedlearning.trees.xgboostingclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier.n_classes", false]], "n_features (dll.machinelearning.supervisedlearning.trees.adaboostclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.n_features", false]], "n_features (dll.machinelearning.supervisedlearning.trees.adaboostregressor attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostRegressor.n_features", false]], "n_features (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.n_features", false]], "n_features (dll.machinelearning.supervisedlearning.trees.gradientboostingregressor attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor.n_features", false]], "n_features (dll.machinelearning.supervisedlearning.trees.xgboostingclassifier attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier.n_features", false]], "n_features (dll.machinelearning.supervisedlearning.trees.xgboostingregressor attribute)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingRegressor.n_features", false]], "precision() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.precision", false]], "predict() (dll.deeplearning.model.model method)": [[9, "DLL.DeepLearning.Model.Model.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.adaboostclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.adaboostregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostRegressor.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.gradientboostingregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.randomforestregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.regressiontree method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.xgboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.xgboostingregressor method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingRegressor.predict", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.adaboostclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.xgboostingclassifier method)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier.predict_proba", false]], "prob_to_pred() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.prob_to_pred", false]], "r2_score() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.r2_score", false]], "randomforestclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier", false]], "randomforestregressor (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor", false]], "recall() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.recall", false]], "regressiontree (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree", false]], "roc_auc() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.roc_auc", false]], "roc_curve() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.roc_curve", false]], "root_mean_squared_error() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.root_mean_squared_error", false]], "silhouette_score() (in module dll.data.metrics)": [[3, "DLL.Data.Metrics.silhouette_score", false]], "summary() (dll.deeplearning.model.model method)": [[9, "DLL.DeepLearning.Model.Model.summary", false]], "xgboostingclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier", false]], "xgboostingregressor (class in dll.machinelearning.supervisedlearning.trees)": [[20, "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingRegressor", false]]}, "objects": {"DLL.Data": [[2, 0, 1, "", "DataReader"], [3, 2, 0, "-", "Metrics"], [4, 2, 0, "-", "Preprocessing"]], "DLL.Data.DataReader": [[2, 1, 1, "", "get_data"]], "DLL.Data.Metrics": [[3, 3, 1, "", "accuracy"], [3, 3, 1, "", "adjusted_r2_score"], [3, 3, 1, "", "auc"], [3, 3, 1, "", "binary_cross_entropy"], [3, 3, 1, "", "calculate_metrics"], [3, 3, 1, "", "categorical_cross_entropy"], [3, 3, 1, "", "confusion_matrix"], [3, 3, 1, "", "exponential_loss"], [3, 3, 1, "", "f1_score"], [3, 3, 1, "", "huber_loss"], [3, 3, 1, "", "mean_absolute_error"], [3, 3, 1, "", "mean_squared_error"], [3, 3, 1, "", "median_absolute_error"], [3, 3, 1, "", "precision"], [3, 3, 1, "", "prob_to_pred"], [3, 3, 1, "", "r2_score"], [3, 3, 1, "", "recall"], [3, 3, 1, "", "roc_auc"], [3, 3, 1, "", "roc_curve"], [3, 3, 1, "", "root_mean_squared_error"], [3, 3, 1, "", "silhouette_score"]], "DLL.Data.Preprocessing": [[4, 0, 1, "", "CategoricalEncoder"], [4, 0, 1, "", "MinMaxScaler"], [4, 0, 1, "", "OneHotEncoder"], [4, 0, 1, "", "PolynomialFeatures"], [4, 0, 1, "", "StandardScaler"], [4, 3, 1, "", "data_split"]], "DLL.Data.Preprocessing.CategoricalEncoder": [[4, 1, 1, "", "decode"], [4, 1, 1, "", "encode"], [4, 1, 1, "", "fit"], [4, 1, 1, "", "fit_encode"]], "DLL.Data.Preprocessing.MinMaxScaler": [[4, 1, 1, "", "fit"], [4, 1, 1, "", "fit_transform"], [4, 1, 1, "", "inverse_transform"], [4, 1, 1, "", "transform"]], "DLL.Data.Preprocessing.OneHotEncoder": [[4, 1, 1, "", "decode"], [4, 1, 1, "", "encode"], [4, 1, 1, "", "fit"], [4, 1, 1, "", "fit_encode"]], "DLL.Data.Preprocessing.PolynomialFeatures": [[4, 1, 1, "", "transform"]], "DLL.Data.Preprocessing.StandardScaler": [[4, 1, 1, "", "fit"], [4, 1, 1, "", "fit_transform"], [4, 1, 1, "", "inverse_transform"], [4, 1, 1, "", "transform"]], "DLL.DeepLearning": [[9, 2, 0, "-", "Model"]], "DLL.DeepLearning.Initialisers": [[6, 0, 1, "", "Kaiming_Normal"], [6, 0, 1, "", "Kaiming_Uniform"], [6, 0, 1, "", "Xavier_Normal"], [6, 0, 1, "", "Xavier_Uniform"]], "DLL.DeepLearning.Initialisers.Kaiming_Normal": [[6, 1, 1, "", "initialise"]], "DLL.DeepLearning.Initialisers.Kaiming_Uniform": [[6, 1, 1, "", "initialise"]], "DLL.DeepLearning.Initialisers.Xavier_Normal": [[6, 1, 1, "", "initialise"]], "DLL.DeepLearning.Initialisers.Xavier_Uniform": [[6, 1, 1, "", "initialise"]], "DLL.DeepLearning.Layers": [[7, 0, 1, "", "Bidirectional"], [7, 0, 1, "", "Conv2D"], [7, 0, 1, "", "Dense"], [7, 0, 1, "", "Flatten"], [7, 0, 1, "", "LSTM"], [7, 0, 1, "", "MaxPooling2D"], [7, 0, 1, "", "RNN"], [7, 0, 1, "", "Reshape"]], "DLL.DeepLearning.Layers.Activations": [[7, 0, 1, "", "ReLU"], [7, 0, 1, "", "Sigmoid"], [7, 0, 1, "", "SoftMax"], [7, 0, 1, "", "Tanh"]], "DLL.DeepLearning.Layers.Activations.ReLU": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.Sigmoid": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.SoftMax": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.Tanh": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Bidirectional": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Conv2D": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Dense": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Flatten": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.LSTM": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.MaxPooling2D": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.RNN": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Regularisation": [[7, 0, 1, "", "BatchNorm"], [7, 0, 1, "", "Dropout"], [7, 0, 1, "", "GroupNorm"], [7, 0, 1, "", "InstanceNorm"], [7, 0, 1, "", "LayerNorm"]], "DLL.DeepLearning.Layers.Regularisation.BatchNorm": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Regularisation.Dropout": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Regularisation.GroupNorm": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Regularisation.InstanceNorm": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Regularisation.LayerNorm": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Reshape": [[7, 1, 1, "", "backward"], [7, 1, 1, "", "forward"]], "DLL.DeepLearning.Losses": [[8, 0, 1, "", "BCE"], [8, 0, 1, "", "CCE"], [8, 0, 1, "", "Exponential"], [8, 0, 1, "", "Huber"], [8, 0, 1, "", "MAE"], [8, 0, 1, "", "MSE"]], "DLL.DeepLearning.Losses.BCE": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.CCE": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.Exponential": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.Huber": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.MAE": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.MSE": [[8, 1, 1, "", "gradient"], [8, 1, 1, "", "hessian"], [8, 1, 1, "", "loss"]], "DLL.DeepLearning.Model": [[9, 0, 1, "", "Model"]], "DLL.DeepLearning.Model.Model": [[9, 1, 1, "", "add"], [9, 1, 1, "", "compile"], [9, 1, 1, "", "fit"], [9, 1, 1, "", "predict"], [9, 1, 1, "", "summary"]], "DLL.DeepLearning.Optimisers": [[10, 0, 1, "", "ADAM"], [10, 0, 1, "", "LBFGS"], [10, 0, 1, "", "SGD"]], "DLL.DeepLearning.Optimisers.ADAM": [[10, 1, 1, "", "initialise_parameters"], [10, 1, 1, "", "update_parameters"]], "DLL.DeepLearning.Optimisers.LBFGS": [[10, 1, 1, "", "initialise_parameters"], [10, 1, 1, "", "update_parameters"]], "DLL.DeepLearning.Optimisers.SGD": [[10, 1, 1, "", "initialise_parameters"], [10, 1, 1, "", "update_parameters"]], "DLL.Exceptions": [[11, 0, 1, "", "NotCompiledError"], [11, 0, 1, "", "NotFittedError"]], "DLL.MachineLearning.SupervisedLearning.GaussianProcesses": [[14, 0, 1, "", "GaussianProcessRegressor"]], "DLL.MachineLearning.SupervisedLearning.GaussianProcesses.GaussianProcessRegressor": [[14, 1, 1, "", "fit"], [14, 1, 1, "", "log_marginal_likelihood"], [14, 4, 1, "", "n_features"], [14, 1, 1, "", "predict"], [14, 1, 1, "", "train_kernel"]], "DLL.MachineLearning.SupervisedLearning.Kernels": [[15, 0, 1, "", "Linear"], [15, 0, 1, "", "Matern"], [15, 0, 1, "", "Periodic"], [15, 0, 1, "", "RBF"], [15, 0, 1, "", "RationalQuadratic"], [15, 0, 1, "", "WhiteGaussian"]], "DLL.MachineLearning.SupervisedLearning.Kernels.Linear": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.Kernels.Matern": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.Kernels.Periodic": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.Kernels.RBF": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.Kernels.RationalQuadratic": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.Kernels.WhiteGaussian": [[15, 1, 1, "", "__call__"], [15, 1, 1, "", "parameters"]], "DLL.MachineLearning.SupervisedLearning.LinearModels": [[16, 0, 1, "", "ElasticNetRegression"], [16, 0, 1, "", "LASSORegression"], [16, 0, 1, "", "LinearRegression"], [16, 0, 1, "", "LogisticRegression"], [16, 0, 1, "", "RidgeRegression"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.ElasticNetRegression": [[16, 4, 1, "", "bias"], [16, 1, 1, "", "fit"], [16, 4, 1, "", "n_features"], [16, 1, 1, "", "predict"], [16, 4, 1, "", "residuals"], [16, 4, 1, "", "weights"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LASSORegression": [[16, 4, 1, "", "bias"], [16, 1, 1, "", "fit"], [16, 4, 1, "", "n_features"], [16, 1, 1, "", "predict"], [16, 4, 1, "", "residuals"], [16, 4, 1, "", "weights"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LinearRegression": [[16, 4, 1, "", "beta"], [16, 1, 1, "", "fit"], [16, 4, 1, "", "n_features"], [16, 1, 1, "", "predict"], [16, 4, 1, "", "residuals"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LogisticRegression": [[16, 4, 1, "", "bias"], [16, 1, 1, "", "fit"], [16, 4, 1, "", "n_features"], [16, 1, 1, "", "predict"], [16, 1, 1, "", "predict_proba"], [16, 4, 1, "", "weights"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.RidgeRegression": [[16, 4, 1, "", "beta"], [16, 1, 1, "", "fit"], [16, 4, 1, "", "n_features"], [16, 1, 1, "", "predict"], [16, 4, 1, "", "residuals"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.TimeSeries": [[16, 0, 1, "", "SARIMA"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.TimeSeries.SARIMA": [[16, 1, 1, "", "fit"], [16, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes": [[17, 0, 1, "", "BernoulliNaiveBayes"], [17, 0, 1, "", "GaussianNaiveBayes"], [17, 0, 1, "", "MultinomialNaiveBayes"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.BernoulliNaiveBayes": [[17, 1, 1, "", "fit"], [17, 4, 1, "", "n_classes"], [17, 4, 1, "", "n_features"], [17, 1, 1, "", "predict"], [17, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.GaussianNaiveBayes": [[17, 1, 1, "", "fit"], [17, 4, 1, "", "n_classes"], [17, 4, 1, "", "n_features"], [17, 1, 1, "", "predict"], [17, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.MultinomialNaiveBayes": [[17, 1, 1, "", "fit"], [17, 4, 1, "", "n_classes"], [17, 4, 1, "", "n_features"], [17, 1, 1, "", "predict"], [17, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Neighbors": [[18, 0, 1, "", "KNNClassifier"], [18, 0, 1, "", "KNNRegressor"]], "DLL.MachineLearning.SupervisedLearning.Neighbors.KNNClassifier": [[18, 1, 1, "", "fit"], [18, 1, 1, "", "predict"], [18, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Neighbors.KNNRegressor": [[18, 1, 1, "", "fit"], [18, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees": [[20, 0, 1, "", "AdaBoostClassifier"], [20, 0, 1, "", "AdaBoostRegressor"], [20, 0, 1, "", "DecisionTree"], [20, 0, 1, "", "GradientBoostingClassifier"], [20, 0, 1, "", "GradientBoostingRegressor"], [20, 0, 1, "", "RandomForestClassifier"], [20, 0, 1, "", "RandomForestRegressor"], [20, 0, 1, "", "RegressionTree"], [20, 0, 1, "", "XGBoostingClassifier"], [20, 0, 1, "", "XGBoostingRegressor"]], "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostClassifier": [[20, 4, 1, "", "confidences"], [20, 1, 1, "", "fit"], [20, 4, 1, "", "n_classes"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.AdaBoostRegressor": [[20, 1, 1, "", "fit"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree": [[20, 4, 1, "", "classes"], [20, 1, 1, "", "fit"], [20, 4, 1, "", "n_classes"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier": [[20, 1, 1, "", "fit"], [20, 4, 1, "", "n_classes"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor": [[20, 1, 1, "", "fit"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier": [[20, 1, 1, "", "fit"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor": [[20, 1, 1, "", "fit"], [20, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree": [[20, 1, 1, "", "fit"], [20, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingClassifier": [[20, 1, 1, "", "fit"], [20, 4, 1, "", "n_classes"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.XGBoostingRegressor": [[20, 1, 1, "", "fit"], [20, 4, 1, "", "n_features"], [20, 1, 1, "", "predict"]], "DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction": [[23, 0, 1, "", "PCA"]], "DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction.PCA": [[23, 4, 1, "", "components"], [23, 4, 1, "", "explained_variance"], [23, 1, 1, "", "fit"], [23, 1, 1, "", "transform"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "py:attribute"}, "terms": {"": [4, 10, 16], "0": [3, 4, 6, 7, 8, 10, 14, 15, 16, 17, 18, 20], "001": [10, 16], "01": 16, "05": 14, "1": [3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "10": [9, 10, 14, 20, 23], "100": 16, "1e": [14, 23], "2": [3, 4, 6, 7, 8, 15, 20, 23], "20": 10, "25": 20, "3": [18, 20], "32": 7, "5": [7, 14, 15, 16, 20], "50": 20, "6": 6, "64": 2, "8": 4, "9": [7, 10], "999": 10, "A": [2, 3, 4, 8, 9, 10, 14, 16, 18, 20], "As": 14, "At": 3, "For": [9, 10, 16, 17], "If": [2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20, 23], "It": [15, 24], "One": 4, "The": [2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23], "There": 18, "These": 15, "__call__": 15, "_i": 7, "_j": 7, "_mse": 16, "_t": 7, "_xavier_glorot": 7, "abl": 3, "absoalut": 3, "absolut": [3, 8, 20], "access": 14, "accord": [4, 18], "accross": [3, 7], "accuraci": 3, "action": 11, "activ": [0, 5, 6, 24], "activ_": 7, "ad": [9, 14], "adaboostclassifi": 13, "adaboostregressor": 13, "adam": [5, 9, 14, 16], "adapt": 10, "add": 9, "addit": 20, "adjust": 3, "adjusted_r2_scor": 3, "affect": 10, "aforement": 24, "after": [7, 14, 16, 17, 20], "aim": 24, "algorithm": [3, 10, 20], "align": [7, 8], "all": [2, 14], "allow": 15, "along": [7, 20, 23], "alpha": [15, 16, 17], "also": [7, 23], "alwai": 23, "amplitud": 15, "an": [4, 9, 11, 20, 24], "analysi": [16, 23], "ani": [6, 7], "anoth": 15, "apart": [9, 15], "append": 3, "appli": [7, 9, 14, 16, 17, 18, 20, 23], "applic": 24, "approach": 16, "appropri": 20, "approxim": [6, 10], "ar": [2, 4, 6, 7, 9, 14, 15, 16, 18], "arbitrari": 20, "architectur": 9, "area": 3, "arma": 16, "around": 8, "artifici": 14, "assum": [9, 14, 16], "atleast": 18, "auc": 3, "auto": 16, "automat": 7, "avail": [13, 14, 16, 17, 20], "averag": [3, 16, 18, 20], "axi": [7, 23], "b": 7, "b_c": 7, "b_f": 7, "b_h": 7, "b_i": 7, "b_o": 7, "b_y": 7, "back": [4, 6], "backpropag": [7, 9], "backward": [6, 7], "base": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23], "baselay": 7, "baselin": 15, "baseloss": 8, "baseoptimis": 10, "baseregularis": 7, "basi": 15, "basic": [7, 16], "batch": [2, 7, 9, 16], "batch_siz": [2, 7, 9, 16], "batchnorm": 7, "batchnormalis": 5, "bay": [12, 13], "bce": [3, 5], "becom": 15, "been": [9, 14, 16, 17, 18, 20, 23], "befor": [3, 4, 9, 11, 14, 16, 17, 18, 20, 23], "begin": [2, 7, 8], "behav": 15, "being": [7, 14], "below": 15, "bernoullinaivebay": 13, "bessel": 15, "best": [], "beta": [7, 16], "beta1": 10, "beta2": 10, "between": [3, 4, 7, 9, 14, 15, 16, 20], "bia": [7, 15, 16], "bias": 7, "bidirect": 5, "binari": [3, 8, 16, 17, 18, 20], "binary_cross_entropi": 3, "bool": [2, 3, 7, 9, 14, 15, 16, 23], "boolean": [7, 23], "bootstrap": 20, "both": 7, "broyden": 10, "c": 7, "c_": 7, "c_t": 7, "calcul": [3, 7, 8, 9, 16, 17, 18, 20, 23], "calculate_metr": 3, "call": [4, 11, 15, 20], "callabl": [3, 10], "callback_frequ": [9, 14, 16], "can": [14, 15, 20], "captur": 15, "case": 8, "categor": [3, 4, 8], "categorical_cross_entropi": 3, "categoricalencod": 4, "cce": [3, 5], "cdot": 8, "center": 23, "centroid": [], "chang": [10, 15], "channel": 7, "characterist": 3, "child": 15, "chosen": [9, 16], "clariti": 24, "class": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23], "classif": [3, 8, 16, 18, 20], "classifi": [16, 17, 18, 20], "close": [6, 15], "closest": 18, "cluster": [3, 12, 21], "coeffici": 3, "column": [14, 16, 17, 18, 20, 23], "combin": [4, 8, 13], "common": 18, "commonli": 15, "compar": [16, 24], "compil": [9, 11], "compon": [16, 23], "comput": [3, 6, 7, 9, 14, 20, 23], "concatan": 7, "confid": 20, "configur": 9, "confus": 3, "confusion_matrix": 3, "consecut": 20, "consid": 18, "constant": [6, 7, 15, 16], "contain": [3, 4, 7, 8, 9, 14, 17, 20], "control": 15, "conv2d": 5, "convert": 3, "convolut": 7, "core": [0, 5, 9, 24], "correct": [9, 14, 15, 16, 17, 18, 20, 23], "correl": 7, "correlation_length": 15, "correspond": [3, 9, 14, 16, 17, 18, 20], "could": 10, "covari": 14, "covariance_funct": 14, "cpu": [6, 9, 14], "creat": 4, "criterion": 20, "cross": [3, 7, 8, 9, 16], "current": [10, 14, 16], "curv": 3, "custom": [0, 24], "cycl": 15, "d": [6, 15, 16], "d_": 6, "d_in": 7, "data": [0, 2, 3, 4, 6, 9, 14, 15, 16, 17, 18, 20, 23, 24], "data_split": 4, "data_typ": [6, 9], "dataread": [0, 1, 24], "dataset": 2, "dcdy": 7, "decai": 15, "decid": [7, 16, 18], "decisiontre": 13, "decod": 4, "deep": [0, 9, 10], "deeplearn": [6, 7, 8, 9, 10, 16], "default": [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "defin": [9, 14, 16], "definit": 14, "deg": 4, "degre": [4, 15], "delta": [8, 20], "demonstr": 24, "dens": 5, "depend": 15, "depth": [7, 20], "descent": 10, "determin": [2, 3, 6, 7, 9, 10, 15, 16], "deviat": 23, "devic": [6, 9, 14], "diagon": 8, "dict": [3, 9, 14, 15, 16, 20], "dictionari": [3, 9, 14, 15, 16], "differ": [3, 8, 14], "differenti": 15, "dimens": [3, 7, 9], "dimension": [3, 7, 12, 16, 21], "dimensionalityreduct": 23, "direct": 10, "disabl": 9, "distanc": [15, 18], "distribut": [3, 8, 16], "divis": 7, "dll": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23, 24], "do": 9, "doe": 10, "dot": 7, "drop": 7, "dropout": [5, 9], "dtype": [6, 9], "dure": [9, 14, 15, 16], "e": [3, 7, 8, 10], "each": [3, 7, 9, 10, 14, 15, 16, 17, 18, 20, 23], "eas": 24, "educ": 24, "effici": 24, "eg": [10, 15], "either": 3, "elasticnet": 13, "elasticnetregress": 16, "element": [3, 7, 16, 17, 18, 20], "els": [7, 20], "encod": [3, 4, 8], "encompass": 24, "end": [7, 8], "entir": 2, "entropi": [3, 8, 9, 16, 20], "epoch": [9, 14, 16], "epsilon": [7, 14, 23], "equal": 4, "equat": [7, 8, 15], "equival": 15, "error": [3, 8, 16, 20], "estim": 10, "euclidian": [15, 18], "evalu": 3, "evenli": 7, "everi": [2, 3, 4, 7, 9, 14, 16, 17, 18, 20], "evolut": [9, 14, 16], "exampl": [15, 24], "except": [0, 24], "exp": 15, "expect": 7, "explain": 23, "explained_vari": 23, "expon": 15, "exponent_kernel": 15, "exponenti": [3, 5, 15, 20], "exponential_loss": 3, "express": 14, "extract": 23, "f": [7, 8], "f1": 3, "f1_score": 3, "f_t": 7, "factor": 15, "fals": [2, 3, 7, 9, 14, 16], "fast": 7, "featur": [3, 4, 7, 14, 16, 17, 18, 20, 23], "filter": 16, "final": [], "find": 4, "first": [4, 7, 9, 10], "first_lay": 9, "fit": [4, 9, 11, 14, 16, 17, 18, 20, 23], "fit_between_step": 16, "fit_encod": 4, "fit_transform": 4, "flag": [7, 9], "flatten": 5, "fletcher": 10, "flexibl": 15, "float": [3, 4, 7, 8, 10, 14, 15, 16, 17, 20], "float32": [6, 9], "floor": [9, 14, 16], "follow": [7, 15, 16], "forc": 16, "format": 16, "forward": [6, 7, 9], "fpr": 3, "frac": [6, 7, 8, 15], "from": [7, 9, 14, 15, 16, 23], "fter": 7, "function": [3, 7, 9, 10, 14, 15, 16, 18, 20, 24], "further": 15, "g": 7, "gain": 20, "gamma": [7, 15, 20], "gaussian": [12, 13, 15, 18, 21], "gaussiannaivebay": 13, "gaussianprocess": 14, "gaussianprocessregressor": 13, "gener": [2, 15, 20], "get": 14, "get_data": 2, "gini": 20, "give": 2, "given": [3, 4, 7, 9, 16], "glorot": 5, "go": 2, "goe": 9, "goldfarb": 10, "good": 16, "gpu": [6, 9], "gradient": [7, 8, 9, 10, 16, 20], "gradientboostingclassifi": 13, "gradientboostingregressor": 13, "greater": 24, "group": 7, "groupnorm": 7, "groupnormalis": 5, "h_": 7, "h_t": 7, "h_tw_o": 7, "ha": [9, 14, 16, 17, 18, 20, 23], "hadamard": 7, "handl": 15, "have": [7, 9, 16], "he": 5, "height": 7, "heigth": 9, "henc": [10, 14], "hessian": [8, 10, 20], "hh": 7, "hidden": 7, "hidden_s": 7, "high": 15, "higher": 15, "histori": [9, 14, 16], "history_s": 10, "hot": [3, 4, 8], "how": [7, 10, 14, 15, 18], "howev": 24, "huber": [3, 5, 20], "huber_delta": 20, "huber_loss": 3, "hyperbol": 7, "hyperparamet": [10, 14], "i": [2, 3, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23, 24], "i_t": 7, "ident": [7, 8], "ignor": 20, "ih": 7, "implement": [14, 16, 20], "import": [15, 18], "includ": [15, 16, 24], "include_bia": 16, "incorrect": [9, 16], "incorrectli": 20, "increas": 14, "indic": 15, "individu": 20, "inertia": [], "inf": 15, "info": [9, 14, 16], "inform": [10, 20], "init": [], "initi": 9, "initialis": [0, 5, 7, 10, 24], "initialise_paramet": 10, "input": [2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20, 23], "input_depth": 7, "input_dim": 6, "input_height": 7, "input_s": 7, "input_shap": [7, 9], "input_width": 7, "inspir": 24, "instanc": [3, 7, 9], "instancenorm": 7, "instancenormalis": 5, "int": [2, 3, 4, 7, 8, 9, 10, 14, 16, 17, 18, 20, 23], "integ": [2, 3, 4, 7, 9, 10, 14, 16, 17, 18, 20, 23], "intend": 24, "intercept": 15, "interv": [9, 14, 16], "inverse_transform": 4, "invert": 14, "iter": [9, 10, 14, 16], "its": [9, 24], "j": [3, 7], "k": [7, 15, 18], "k_": 15, "kaim": 5, "kaiming_norm": 6, "kaiming_uniform": 6, "kalman": 16, "keep": 23, "kei": [3, 15], "kernel": [7, 12, 13, 14], "kernel_matrix": 15, "kernel_s": 7, "kind": 15, "kmean": 21, "kmeansclust": [], "knearestneighborsclassifi": 13, "knearestneighborsregressor": 13, "knnclassifi": 18, "knnregressor": 18, "kwarg": 7, "l": 15, "l1": [15, 16], "l1_ratio": 16, "l2": 16, "l_": 8, "l_i": 8, "label": [2, 3, 4, 8, 16, 17, 18, 20], "lambda": 10, "laplacian": 17, "larg": 15, "larger": [2, 8, 16, 20], "lassoregress": 13, "last": 7, "last_lay": 9, "layer": [0, 5, 9, 24], "layernorm": 7, "layernormalis": 5, "lbfg": 5, "leaf": 20, "learn": [0, 9, 10, 12, 15], "learning_r": [10, 16, 20], "left": 15, "length": 15, "leq": 8, "less": 4, "level": [15, 24], "like": 15, "likelihood": [14, 17], "limit": 10, "lin": 7, "line": 10, "linear": [6, 7, 9, 12, 13, 15, 20], "linear_kernel": 15, "linear_sigma_1": 15, "linearmodel": 16, "linearregress": 13, "list": [3, 9, 10, 16, 20], "ln": 8, "log": 14, "log_loss": 20, "log_marginal_likelihood": 14, "logist": [9, 16], "logisticregress": [9, 13], "long": [7, 9, 10, 14, 16], "look": 18, "loss": [0, 3, 5, 7, 9, 10, 16, 20, 24], "lot": 10, "lower": [15, 16], "lstm": 5, "ma": 16, "machin": [12, 13, 24], "machinelearn": [0, 14, 15, 16, 17, 18, 20, 23, 24], "made": [6, 9, 20], "mae": [3, 5], "mai": 24, "make": [14, 15, 20], "manhattan": 18, "mani": [15, 20], "margin": 14, "match": 24, "matern": 15, "matern_sigma_1": 15, "mathbb": [7, 15], "matrici": [7, 14, 15, 18], "matrix": [3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "max": [4, 7], "max_depth": 20, "max_it": [], "maxim": 14, "maximum": [2, 4, 10, 20], "maxiterl": 10, "maxpooling2d": 5, "mean": [3, 4, 7, 8, 9, 14, 15, 16], "mean_absolute_error": 3, "mean_squared_error": 3, "median": 3, "median_absolut": 3, "median_absolute_error": 3, "member": 9, "memori": [7, 10], "messag": 11, "method": [8, 10, 15, 20, 24], "metric": [0, 1, 9, 15, 16, 18, 20, 24], "min": 4, "min_samples_split": 20, "minim": [9, 16, 20], "minimum": [4, 20], "minmaxscal": 4, "missclassifi": 20, "mixtur": [15, 21], "mode": [6, 7], "model": [0, 3, 5, 7, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24], "model_paramet": 10, "modifi": 15, "modul": 13, "moment": [3, 10], "momentum": 10, "more": [10, 15], "most": 18, "move": [15, 16], "mse": [3, 5, 9, 16], "multi": [8, 16], "multiclass": 18, "multinomialnaivebay": 13, "multipli": 20, "must": [2, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "n": [6, 8], "n_channel": 9, "n_class": [3, 4, 16, 17, 18, 20], "n_compon": 23, "n_featur": [3, 4, 7, 9, 14, 15, 16, 17, 18, 20, 23], "n_init": [], "n_sampl": [2, 3, 4, 7, 9, 14, 16, 17, 18, 20, 23], "n_samples_1": 15, "n_samples_2": 15, "n_threshold": 3, "n_tree": 20, "naiv": [12, 13], "naivebay": 17, "name": 3, "ncr": 4, "nearest": 18, "need": [10, 16], "neg": [7, 10, 14, 16, 17, 20], "neighbor": [12, 13], "network": 7, "neural": 7, "new": [4, 7, 15], "next": [7, 16], "node": 7, "nois": [14, 15], "non": [7, 10, 14, 15, 16, 17, 20], "none": [3, 7, 9, 14, 16, 17, 18, 20, 23], "nonlinear": 6, "norm": [7, 15, 16], "normal": [6, 7, 14, 16, 23], "normalis": [4, 7], "notcompilederror": [0, 9, 11, 24], "notfittederror": [0, 11, 14, 16, 17, 18, 20, 23, 24], "nu": 15, "num_group": 7, "number": [2, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "numer": 24, "o_t": 7, "object": [2, 4, 7, 9, 14, 16, 17, 18, 20, 23], "observ": 3, "odot": 7, "offer": 24, "often": 15, "old": 10, "onc": 15, "one": [3, 4, 7, 8, 10, 14, 15, 16, 18, 20], "onehotencod": 4, "onli": [7, 17, 20], "oper": [3, 7], "optim": [14, 20], "optimis": [0, 5, 9, 14, 16, 24], "optimum": 10, "option": [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 18, 20, 23], "order": [9, 10, 16, 20], "origin": [3, 4, 6, 7], "other": [6, 9, 16, 24], "otherwis": 8, "out": 7, "output": [3, 6, 7], "output_depth": 7, "output_dim": 6, "output_height": 7, "output_s": 7, "output_shap": [7, 9], "output_width": 7, "over": 15, "overal": 15, "p": [7, 15, 16], "pairwis": 15, "paper": 10, "paramet": [2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23], "part": 16, "partit": [], "pass": [7, 11], "patienc": 7, "pattern": 15, "pca": 21, "perform": [7, 24], "period": 15, "periodic_sigma_1": 15, "phase": 9, "pi": 15, "point": [2, 15, 18], "polynomi": [4, 15], "polynomial_kernel_degree_d": 15, "polynomialfeatur": 4, "pool": 7, "pool_siz": 7, "posit": [2, 3, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "possibl": [4, 7, 15], "possibli": 20, "posterior": 14, "precentag": 4, "precis": 3, "predict": [3, 4, 8, 9, 10, 14, 16, 17, 18, 20], "predict_proba": [16, 17, 18, 20], "predictiong": 20, "preprocess": [0, 1, 24], "previou": [10, 20], "previous": 20, "princip": 23, "print": [9, 14, 16], "prior": 17, "prob_to_pr": 3, "probabl": [3, 7, 8, 16, 17, 18, 20], "problem": [3, 20], "process": [12, 13, 15], "product": [7, 15, 24], "product_kernel": 15, "product_of_other_dimens": 7, "project": 24, "propag": [6, 7, 9], "proport": 16, "provid": 24, "pure": 15, "put": 16, "pytorch": [9, 14, 15, 16, 17, 18, 20, 23, 24], "q": 16, "quadrat": 15, "quickli": 15, "r2_score": 3, "radial": 15, "radiu": 8, "rais": [9, 11, 14, 15, 16, 17, 18, 20, 23], "random": 15, "randomforestclassifi": 13, "randomforestregressor": 13, "rang": [4, 8, 10, 16, 20, 24], "rate": [3, 10], "ration": 15, "rational_quadratic_sigma_1": 15, "rationalquadrat": 15, "rbf": 15, "rbf_kernel": 15, "rbf_sigma_1": 15, "reader": 2, "real": [4, 8, 15, 16, 17, 20], "recal": 3, "receiv": 3, "recommend": 24, "rectifi": 7, "recurr": 7, "reduc": 23, "reduct": [8, 12, 21], "refit": 16, "reg": 7, "reg_": 7, "reg_lambda": 20, "regress": [8, 14, 16, 18, 20], "regressiontre": 13, "regressor": 18, "regular": 16, "regularis": [0, 5, 9, 16, 20, 24], "rel": 15, "relationship": 15, "relu": [5, 6], "remain": [4, 9], "repeat": 15, "repres": [3, 7, 15], "requir": [10, 20], "reshap": 5, "residu": [16, 20], "respect": [7, 15, 18], "result": 7, "return": [3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 20, 23], "return_last": 7, "return_sampl": 3, "revers": 7, "ridgeregress": 13, "right": 15, "rmse": 3, "rnn": 5, "robust": 10, "roc": 3, "roc_auc": 3, "roc_curv": 3, "root": 3, "root_mean_squared_error": 3, "round": 14, "row": [14, 16, 17, 18, 20, 23], "rule": 3, "runtimeerror": 14, "same": [3, 7, 8, 9], "sampl": [2, 3, 4, 9, 14, 15, 16, 17, 18, 20, 23], "sarima": 13, "scale": [4, 15], "scaler": 4, "scikit": 24, "score": 3, "search": 10, "season": [15, 16], "seasonal_ord": 16, "second": [10, 15], "seen": 15, "select": [9, 16, 20, 23], "self": 7, "sensit": 3, "separ": [3, 16], "sequanti": 9, "sequenc": 7, "sequence_length": 7, "seri": 13, "set": [4, 7, 9, 15, 17], "sgd": 5, "shanno": 10, "shape": [2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 20, 23], "short": 7, "should": [6, 9, 14, 15, 16], "showcas": 15, "shuffl": [2, 4, 9, 16], "shuffle_data": [9, 16], "shuffle_every_epoch": [2, 9, 16], "sigma": [6, 7, 15], "sigma_": 15, "sigma_bia": 15, "sigmoid": [5, 6], "silhouett": 3, "silhouette_scor": 3, "similar": [14, 15], "similarli": 14, "sin": 15, "singl": 8, "size": [2, 6, 7, 9, 16], "small": [7, 15], "smaller": 20, "smooth": [15, 17], "so": 23, "softmax": [5, 6], "some": [7, 18], "sometim": 15, "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 23], "space": [4, 15, 23], "spectral": 21, "spesifi": 7, "split": [4, 20], "sqrt": [6, 7, 15], "squar": [3, 7, 8, 10, 15, 16, 20], "stack": 9, "standard": [4, 23], "standardscal": 4, "star": 7, "state": 7, "step": [10, 16], "stochast": 10, "store": [10, 18], "str": [3, 6, 8, 9, 14, 15, 16, 18, 20], "strictli": 7, "string": [9, 11, 20], "suboptim": 16, "sum": [4, 8, 15], "sum_": [7, 8], "sum_kernel": 15, "summari": 9, "supervis": [0, 12, 24], "supervisedlearn": [14, 15, 16, 17, 18, 20], "support": [12, 13], "sure": 14, "svc": 13, "svr": 13, "t": 7, "take": 10, "tangent": 7, "tanh": [5, 6], "target": [2, 4, 9, 10, 14, 16, 17, 18, 20], "tensor": [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "tensorflow": 24, "term": [7, 15], "test": [4, 24], "text": [6, 7, 8], "than": [2, 4, 8, 9, 10], "theorem": 17, "therefor": [10, 24], "thi": [7, 10, 14, 15, 16, 20, 24], "those": 24, "threshold": 3, "through": [2, 7, 9], "time": [2, 13], "timeseri": 16, "togeth": 7, "tol": [], "torch": [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 23], "total": [], "toward": [10, 16], "tpr": 3, "track": [9, 14, 16], "train": [3, 4, 7, 9, 14, 15, 16], "train_alpha": 15, "train_correlation_length": 15, "train_kernel": 14, "train_period": 15, "train_sigma": 15, "train_sigma_bia": 15, "train_split": 4, "trainabl": 7, "transform": [4, 7, 23], "trapezoid": 3, "tree": [12, 13], "true": [2, 3, 4, 7, 8, 9, 14, 15, 16, 23], "true_output": [3, 8], "tune": 10, "tupl": [2, 3, 4, 7, 9, 10, 14, 16, 20], "twice": 15, "two": [15, 16], "type": [3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20, 23], "typeerror": [9, 14, 15, 16, 17, 18, 20, 23], "u": [6, 7], "u_ch_": 7, "u_fh_": 7, "u_ih_": 7, "u_oh_": 7, "under": 3, "understand": 24, "uniform": [6, 18], "unit": 7, "unsupervisedlearn": [0, 12, 23, 24], "update_paramet": 10, "us": [2, 3, 6, 7, 8, 9, 10, 14, 15, 16, 20, 24], "usag": 24, "val_": 3, "val_data": [9, 16], "val_loss": 3, "val_ms": 3, "valid": [3, 4, 9, 16], "validation_split": 4, "valu": [2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20], "valueerror": [9, 14, 15, 16, 17, 18, 20, 23], "var": 7, "vari": 15, "varianc": [4, 6, 7, 14, 15, 16, 20, 23], "variat": 15, "varieti": 24, "vector": [3, 7, 12, 13, 15, 20], "verbos": [9, 14, 16], "veri": 10, "versatil": 15, "w": 7, "w_": 7, "w_cx_t": 7, "w_fx_t": 7, "w_ix_t": 7, "w_o": 7, "w_ox_t": 7, "w_yh_t": 7, "wai": 15, "want": [3, 6, 9], "weight": [7, 15, 16, 18], "weighted_median": 20, "when": 11, "where": [6, 7, 8, 14, 15, 16, 17, 18, 20, 23], "wheter": 15, "whether": 23, "which": [6, 9, 11, 14, 15, 16, 20], "while": [6, 15, 24], "white": 15, "white_gaussian_sigma_1": 15, "whitegaussian": 15, "whole": [4, 7], "wide": 24, "widetild": 7, "width": [7, 9], "wise": 7, "without": 15, "wrapper": 7, "wrong": [9, 14, 16, 20], "x": [2, 3, 4, 7, 9, 14, 16, 17, 18, 20, 23], "x1": 15, "x2": 15, "x_batch": 2, "x_i": [7, 8, 15], "x_ix_j": 15, "x_j": [7, 15], "x_new": 23, "x_test": 4, "x_train": [4, 10], "x_tw_": 7, "x_val": [4, 9, 16], "xavier": 5, "xavier_glorot": [], "xavier_norm": 6, "xavier_uniform": [6, 7], "xgboostingclassifi": 13, "xgboostingregressor": 13, "xw": 7, "y": [2, 3, 4, 7, 9, 14, 16, 17, 18, 20], "y_": 7, "y_batch": 2, "y_i": 8, "y_t": 7, "y_test": 4, "y_train": [4, 10], "y_val": [4, 9, 16], "yield": [2, 15, 20], "zero": [4, 7, 14, 15, 16, 17]}, "titles": ["DLL", "Data", "DataReader", "Metrics", "Preprocessing", "Deep learning", "Initialisers", "Core layers", "Losses", "Models", "Optimisers", "Custom exceptions", "MachineLearning", "Supervised learning", "Gaussian processes", "Kernels", "Linear models", "Naive Bayes", "Neighbors", "Support vector machines", "Trees", "UnsupervisedLearning", "Clustering", "Dimensionality reduction", "Deep learning library documentation"], "titleterms": {"The": 7, "activ": 7, "adaboostclassifi": 20, "adaboostregressor": 20, "adam": 10, "avail": 15, "batchnormalis": 7, "bay": 17, "bce": 8, "bernoullinaivebay": 17, "bidirect": 7, "cce": 8, "cluster": 22, "combin": 15, "content": 24, "conv2d": 7, "core": 7, "custom": 11, "data": 1, "dataread": 2, "decisiontre": 20, "deep": [5, 24], "dens": 7, "depend": 7, "dimension": 23, "dll": 0, "document": 24, "dropout": 7, "elasticnet": 16, "except": 11, "exponenti": 8, "flatten": 7, "gaussian": [14, 22], "gaussiannaivebay": 17, "gaussianprocessregressor": 14, "glorot": 6, "gradientboostingclassifi": 20, "gradientboostingregressor": 20, "groupnormalis": 7, "he": 6, "huber": 8, "initialis": 6, "instancenormalis": 7, "kaim": 6, "kernel": 15, "kmean": 22, "knearestneighborsclassifi": 18, "knearestneighborsregressor": 18, "lassoregress": 16, "layer": 7, "layernormalis": 7, "lbfg": 10, "learn": [5, 13, 24], "librari": 24, "linear": 16, "linearregress": 16, "logisticregress": 16, "loss": 8, "lstm": 7, "machin": 19, "machinelearn": 12, "mae": 8, "maxpooling2d": 7, "method": 7, "metric": 3, "mixtur": 22, "model": [9, 16, 22], "modul": 17, "mse": 8, "multinomialnaivebay": 17, "naiv": 17, "neighbor": 18, "optimis": 10, "paramet": 7, "pca": 23, "preprocess": 4, "process": 14, "randomforestclassifi": 20, "randomforestregressor": 20, "reduct": 23, "regressiontre": 20, "regularis": 7, "relu": 7, "reshap": 7, "return": 7, "ridgeregress": 16, "rnn": 7, "sarima": 16, "seri": 16, "sgd": 10, "shape": 7, "sigmoid": 7, "softmax": 7, "spectral": 22, "supervis": 13, "support": 19, "svc": 19, "svr": 19, "tanh": 7, "time": 16, "tree": 20, "unsupervisedlearn": 21, "vector": 19, "xavier": 6, "xgboostingclassifi": 20, "xgboostingregressor": 20}})