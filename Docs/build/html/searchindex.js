Search.setIndex({"alltitles": {"ADAM": [[9, "adam"]], "Activation layers": [[6, "activation-layers"]], "BCE": [[7, "bce"]], "BatchNormalisation": [[6, "batchnormalisation"]], "BernoulliNaiveBayes": [[16, "bernoullinaivebayes"]], "CCE": [[7, "cce"]], "Clustering": [[21, null]], "Contents:": [[23, null]], "Conv2D": [[6, "conv2d"]], "Core layers": [[6, null]], "Custom exceptions": [[10, null]], "DLL": [[0, null]], "Data": [[1, null]], "DataReader": [[2, null]], "DecisionTree": [[19, "decisiontree"]], "Deep learning": [[5, null]], "Deep learning library documentation": [[23, null]], "Dense": [[6, "dense"]], "Dimensionality reduction": [[22, null]], "Dropout": [[6, "dropout"]], "Elasticnet": [[15, "elasticnet"]], "Flatten": [[6, "flatten"]], "Gaussian processes": [[13, null]], "GaussianNaiveBayes module": [[16, "gaussiannaivebayes-module"]], "GaussianProcessRegressor": [[13, "gaussianprocessregressor"]], "GradientBoostingClassifier": [[19, "gradientboostingclassifier"]], "GradientBoostingRegressor": [[19, "gradientboostingregressor"]], "GroupNormalisation": [[6, "groupnormalisation"]], "Huber": [[7, "huber"]], "Input": [[6, "input"]], "InstanceNormalisation": [[6, "instancenormalisation"]], "KMeans": [[21, "kmeans"]], "KNearestNeighborsClassifier": [[17, "knearestneighborsclassifier"]], "KNearestNeighborsRegressor": [[17, "knearestneighborsregressor"]], "Kernels": [[14, null]], "LSTM": [[6, "lstm"]], "LassoRegression": [[15, "lassoregression"]], "LayerNormalisation": [[6, "layernormalisation"]], "Linear models": [[15, null]], "LinearRegression": [[15, "linearregression"]], "LogisticRegression": [[15, "logisticregression"]], "Losses": [[7, null]], "MAE": [[7, "mae"]], "MSE": [[7, "mse"]], "MachineLearning": [[11, null]], "MaxPooling2D": [[6, "maxpooling2d"]], "Metrics": [[3, null]], "Models": [[8, null]], "MultinomialNaiveBayes module": [[16, "multinomialnaivebayes-module"]], "Naive Bayes": [[16, null]], "Neighbors": [[17, null]], "Optimisers": [[9, null]], "PCA": [[22, "pca"]], "Preprocessing": [[4, null]], "RNN": [[6, "rnn"]], "RandomForestClassifier": [[19, "randomforestclassifier"]], "RandomForestRegressor": [[19, "randomforestregressor"]], "ReLU": [[6, "relu"]], "RegressionTree": [[19, "regressiontree"]], "Regularisation layers": [[6, "regularisation-layers"]], "Reshape": [[6, "reshape"]], "RidgeRegression": [[15, "ridgeregression"]], "SGD": [[9, "sgd"]], "SVC": [[18, "svc"]], "SVCSMO": [[18, "svcsmo"]], "SVR": [[18, "svr"]], "Sigmoid": [[6, "sigmoid"]], "SoftMax": [[6, "softmax"]], "Supervised learning": [[12, null]], "Support vector machines": [[18, null]], "Tanh": [[6, "tanh"]], "Trees": [[19, null]], "UnsupervisedLearning": [[20, null]]}, "docnames": ["api/DLL", "api/DLL.Data", "api/DLL.Data.DataReader", "api/DLL.Data.Metrics", "api/DLL.Data.Preprocessing", "api/DLL.DeepLearning", "api/DLL.DeepLearning.Layers", "api/DLL.DeepLearning.Losses", "api/DLL.DeepLearning.Models", "api/DLL.DeepLearning.Optimisers", "api/DLL.Exceptions", "api/DLL.MachineLearning", "api/DLL.MachineLearning.SupervisedLearning", "api/DLL.MachineLearning.SupervisedLearning.GaussianProcesses", "api/DLL.MachineLearning.SupervisedLearning.Kernels", "api/DLL.MachineLearning.SupervisedLearning.LinearModels", "api/DLL.MachineLearning.SupervisedLearning.NaiveBayes", "api/DLL.MachineLearning.SupervisedLearning.Neighbors", "api/DLL.MachineLearning.SupervisedLearning.SupportVectorMachines", "api/DLL.MachineLearning.SupervisedLearning.Trees", "api/DLL.MachineLearning.UnsupervisedLearning", "api/DLL.MachineLearning.UnsupervisedLearning.Clustering", "api/DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api\\DLL.rst", "api\\DLL.Data.rst", "api\\DLL.Data.DataReader.rst", "api\\DLL.Data.Metrics.rst", "api\\DLL.Data.Preprocessing.rst", "api\\DLL.DeepLearning.rst", "api\\DLL.DeepLearning.Layers.rst", "api\\DLL.DeepLearning.Losses.rst", "api\\DLL.DeepLearning.Models.rst", "api\\DLL.DeepLearning.Optimisers.rst", "api\\DLL.Exceptions.rst", "api\\DLL.MachineLearning.rst", "api\\DLL.MachineLearning.SupervisedLearning.rst", "api\\DLL.MachineLearning.SupervisedLearning.GaussianProcesses.rst", "api\\DLL.MachineLearning.SupervisedLearning.Kernels.rst", "api\\DLL.MachineLearning.SupervisedLearning.LinearModels.rst", "api\\DLL.MachineLearning.SupervisedLearning.NaiveBayes.rst", "api\\DLL.MachineLearning.SupervisedLearning.Neighbors.rst", "api\\DLL.MachineLearning.SupervisedLearning.SupportVectorMachines.rst", "api\\DLL.MachineLearning.SupervisedLearning.Trees.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.Clustering.rst", "api\\DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction.rst", "index.rst"], "indexentries": {"classes (dll.machinelearning.supervisedlearning.trees.decisiontree attribute)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.classes", false]], "decisiontree (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree", false]], "fit() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.gradientboostingregressor method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.randomforestregressor method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor.fit", false]], "fit() (dll.machinelearning.supervisedlearning.trees.regressiontree method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree.fit", false]], "gradientboostingclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier", false]], "gradientboostingregressor (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor", false]], "n_classes (dll.machinelearning.supervisedlearning.trees.decisiontree attribute)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.n_classes", false]], "predict() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.gradientboostingregressor method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.randomforestregressor method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor.predict", false]], "predict() (dll.machinelearning.supervisedlearning.trees.regressiontree method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree.predict", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.decisiontree method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.gradientboostingclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier.predict_proba", false]], "predict_proba() (dll.machinelearning.supervisedlearning.trees.randomforestclassifier method)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier.predict_proba", false]], "randomforestclassifier (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier", false]], "randomforestregressor (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor", false]], "regressiontree (class in dll.machinelearning.supervisedlearning.trees)": [[19, "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree", false]]}, "objects": {"DLL.Data": [[2, 0, 1, "", "DataReader"], [3, 2, 0, "-", "Metrics"], [4, 2, 0, "-", "Preprocessing"]], "DLL.Data.DataReader": [[2, 1, 1, "", "get_data"]], "DLL.Data.Metrics": [[3, 3, 1, "", "accuracy"], [3, 3, 1, "", "auc"], [3, 3, 1, "", "binary_cross_entropy"], [3, 3, 1, "", "binary_prob_to_prediction"], [3, 3, 1, "", "calculate_metrics"], [3, 3, 1, "", "categorical_cross_entropy"], [3, 3, 1, "", "confusion_matrix"], [3, 3, 1, "", "f1_score"], [3, 3, 1, "", "huber_loss"], [3, 3, 1, "", "mean_absolute_error"], [3, 3, 1, "", "mean_squared_error"], [3, 3, 1, "", "precision"], [3, 3, 1, "", "recall"], [3, 3, 1, "", "roc_curve"], [3, 3, 1, "", "root_mean_squared_error"]], "DLL.Data.Preprocessing": [[4, 0, 1, "", "BinaryEncoder"], [4, 0, 1, "", "MinMaxScaler"], [4, 0, 1, "", "OneHotEncoder"], [4, 0, 1, "", "PolynomialFeatures"], [4, 0, 1, "", "StandardScaler"], [4, 3, 1, "", "data_split"]], "DLL.Data.Preprocessing.BinaryEncoder": [[4, 1, 1, "", "binary_decode"], [4, 1, 1, "", "binary_encode"], [4, 1, 1, "", "fit"]], "DLL.Data.Preprocessing.MinMaxScaler": [[4, 1, 1, "", "fit"], [4, 1, 1, "", "inverse_transform"], [4, 1, 1, "", "transform"]], "DLL.Data.Preprocessing.OneHotEncoder": [[4, 1, 1, "", "fit"], [4, 1, 1, "", "one_hot_decode"], [4, 1, 1, "", "one_hot_encode"]], "DLL.Data.Preprocessing.PolynomialFeatures": [[4, 1, 1, "", "transform"]], "DLL.Data.Preprocessing.StandardScaler": [[4, 1, 1, "", "fit"], [4, 1, 1, "", "inverse_transform"], [4, 1, 1, "", "transform"]], "DLL.DeepLearning": [[8, 2, 0, "-", "Model"]], "DLL.DeepLearning.Layers": [[6, 0, 1, "", "Conv2D"], [6, 0, 1, "", "Dense"], [6, 0, 1, "", "Flatten"], [6, 0, 1, "", "Input"], [6, 0, 1, "", "LSTM"], [6, 0, 1, "", "MaxPooling2D"], [6, 0, 1, "", "RNN"], [6, 0, 1, "", "Reshape"]], "DLL.DeepLearning.Layers.Activations": [[6, 0, 1, "", "ReLU"], [6, 0, 1, "", "Sigmoid"], [6, 0, 1, "", "SoftMax"], [6, 0, 1, "", "Tanh"]], "DLL.DeepLearning.Layers.Activations.ReLU": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.Sigmoid": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.SoftMax": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Activations.Tanh": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"]], "DLL.DeepLearning.Layers.Conv2D": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.Dense": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.Flatten": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.Input": [[6, 1, 1, "", "summary"]], "DLL.DeepLearning.Layers.LSTM": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.MaxPooling2D": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "generate_sections"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.RNN": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "initialise_layer"]], "DLL.DeepLearning.Layers.Regularisation": [[6, 0, 1, "", "BatchNorm"], [6, 0, 1, "", "Dropout"], [6, 0, 1, "", "GroupNorm"], [6, 0, 1, "", "InstanceNorm"], [6, 0, 1, "", "LayerNorm"]], "DLL.DeepLearning.Layers.Regularisation.BatchNorm": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "set_output_shape"], [6, 1, 1, "", "summary"]], "DLL.DeepLearning.Layers.Regularisation.Dropout": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "initialise_layer"], [6, 1, 1, "", "summary"]], "DLL.DeepLearning.Layers.Regularisation.GroupNorm": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"], [6, 1, 1, "", "get_parameters"], [6, 1, 1, "", "set_output_shape"], [6, 1, 1, "", "summary"]], "DLL.DeepLearning.Layers.Regularisation.InstanceNorm": [[6, 1, 1, "", "set_output_shape"]], "DLL.DeepLearning.Layers.Reshape": [[6, 1, 1, "", "backward"], [6, 1, 1, "", "forward"]], "DLL.DeepLearning.Losses": [[7, 0, 1, "", "Huber"], [7, 0, 1, "", "bce"], [7, 0, 1, "", "cce"], [7, 0, 1, "", "mae"], [7, 0, 1, "", "mse"]], "DLL.DeepLearning.Losses.Huber": [[7, 1, 1, "", "gradient"], [7, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.bce": [[7, 1, 1, "", "gradient"], [7, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.cce": [[7, 1, 1, "", "gradient"], [7, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.mae": [[7, 1, 1, "", "gradient"], [7, 1, 1, "", "loss"]], "DLL.DeepLearning.Losses.mse": [[7, 1, 1, "", "gradient"], [7, 1, 1, "", "loss"]], "DLL.DeepLearning.Model": [[8, 0, 1, "", "Model"]], "DLL.DeepLearning.Model.Model": [[8, 1, 1, "", "add"], [8, 1, 1, "", "backward"], [8, 1, 1, "", "compile"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "predict"], [8, 1, 1, "", "summary"]], "DLL.DeepLearning.Optimisers": [[9, 0, 1, "", "Adam"], [9, 0, 1, "", "sgd"]], "DLL.DeepLearning.Optimisers.Adam": [[9, 1, 1, "", "initialise_parameters"], [9, 1, 1, "", "update_parameters"]], "DLL.DeepLearning.Optimisers.sgd": [[9, 1, 1, "", "initialise_parameters"], [9, 1, 1, "", "update_parameters"]], "DLL.Exceptions": [[10, 0, 1, "", "NotFittedError"]], "DLL.MachineLearning.SupervisedLearning": [[14, 2, 0, "-", "Kernels"]], "DLL.MachineLearning.SupervisedLearning.GaussianProcesses": [[13, 0, 1, "", "GaussianProcessRegressor"]], "DLL.MachineLearning.SupervisedLearning.GaussianProcesses.GaussianProcessRegressor": [[13, 1, 1, "", "fit"], [13, 1, 1, "", "log_marginal_likelihood"], [13, 1, 1, "", "predict"], [13, 1, 1, "", "train_kernel"]], "DLL.MachineLearning.SupervisedLearning.Kernels": [[14, 0, 1, "", "LinearCovariance"], [14, 0, 1, "", "PeriodicCovariance"], [14, 0, 1, "", "RationalQuadraticCovariance"], [14, 0, 1, "", "SquaredExponentialCovariance"], [14, 0, 1, "", "WhiteGaussianCovariance"]], "DLL.MachineLearning.SupervisedLearning.Kernels.LinearCovariance": [[14, 1, 1, "", "derivative_sigma"], [14, 1, 1, "", "derivative_sigma_bias"], [14, 1, 1, "", "parameters"], [14, 1, 1, "", "update"]], "DLL.MachineLearning.SupervisedLearning.Kernels.PeriodicCovariance": [[14, 1, 1, "", "derivative_corr_len"], [14, 1, 1, "", "derivative_period"], [14, 1, 1, "", "derivative_sigma"], [14, 1, 1, "", "parameters"], [14, 1, 1, "", "update"]], "DLL.MachineLearning.SupervisedLearning.Kernels.RationalQuadraticCovariance": [[14, 1, 1, "", "derivative_alpha"], [14, 1, 1, "", "derivative_corr_len"], [14, 1, 1, "", "derivative_sigma"], [14, 1, 1, "", "parameters"], [14, 1, 1, "", "update"]], "DLL.MachineLearning.SupervisedLearning.Kernels.SquaredExponentialCovariance": [[14, 1, 1, "", "derivative_corr_len"], [14, 1, 1, "", "derivative_sigma"], [14, 1, 1, "", "parameters"], [14, 1, 1, "", "update"]], "DLL.MachineLearning.SupervisedLearning.Kernels.WhiteGaussianCovariance": [[14, 1, 1, "", "derivative_sigma"], [14, 1, 1, "", "parameters"], [14, 1, 1, "", "update"]], "DLL.MachineLearning.SupervisedLearning.LinearModels": [[15, 0, 1, "", "ElasticNetRegression"], [15, 0, 1, "", "LASSORegression"], [15, 0, 1, "", "LinearRegression"], [15, 0, 1, "", "LogisticRegression"], [15, 0, 1, "", "RidgeRegression"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.ElasticNetRegression": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "plot"], [15, 1, 1, "", "plot_residuals"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "summary"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LASSORegression": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "plot"], [15, 1, 1, "", "plot_residuals"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "summary"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LinearRegression": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "plot"], [15, 1, 1, "", "plot_residuals"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "summary"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.LogisticRegression": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.LinearModels.RidgeRegression": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "plot"], [15, 1, 1, "", "plot_residuals"], [15, 1, 1, "", "predict"], [15, 1, 1, "", "summary"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes": [[16, 0, 1, "", "BernoulliNaiveBayes"], [16, 0, 1, "", "GaussianNaiveBayes"], [16, 0, 1, "", "MultinomialNaiveBayes"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.BernoulliNaiveBayes": [[16, 1, 1, "", "fit"], [16, 1, 1, "", "predict"], [16, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.GaussianNaiveBayes": [[16, 1, 1, "", "fit"], [16, 1, 1, "", "predict"], [16, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.NaiveBayes.MultinomialNaiveBayes": [[16, 1, 1, "", "fit"], [16, 1, 1, "", "predict"], [16, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Neighbors": [[17, 0, 1, "", "KNNClassifier"], [17, 0, 1, "", "KNNRegressor"]], "DLL.MachineLearning.SupervisedLearning.Neighbors.KNNClassifier": [[17, 1, 1, "", "fit"], [17, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Neighbors.KNNRegressor": [[17, 1, 1, "", "fit"], [17, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.SupportVectorMachines": [[18, 0, 1, "", "SVC"], [18, 0, 1, "", "SVCSMO"], [18, 0, 1, "", "SVR"]], "DLL.MachineLearning.SupervisedLearning.SupportVectorMachines.SVC": [[18, 1, 1, "", "fit"], [18, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.SupportVectorMachines.SVCSMO": [[18, 1, 1, "", "fit"], [18, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.SupportVectorMachines.SVR": [[18, 1, 1, "", "fit"], [18, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees": [[19, 0, 1, "", "DecisionTree"], [19, 0, 1, "", "GradientBoostingClassifier"], [19, 0, 1, "", "GradientBoostingRegressor"], [19, 0, 1, "", "RandomForestClassifier"], [19, 0, 1, "", "RandomForestRegressor"], [19, 0, 1, "", "RegressionTree"]], "DLL.MachineLearning.SupervisedLearning.Trees.DecisionTree": [[19, 4, 1, "", "classes"], [19, 1, 1, "", "fit"], [19, 4, 1, "", "n_classes"], [19, 1, 1, "", "predict"], [19, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingClassifier": [[19, 1, 1, "", "fit"], [19, 1, 1, "", "predict"], [19, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.GradientBoostingRegressor": [[19, 1, 1, "", "fit"], [19, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestClassifier": [[19, 1, 1, "", "fit"], [19, 1, 1, "", "predict"], [19, 1, 1, "", "predict_proba"]], "DLL.MachineLearning.SupervisedLearning.Trees.RandomForestRegressor": [[19, 1, 1, "", "fit"], [19, 1, 1, "", "predict"]], "DLL.MachineLearning.SupervisedLearning.Trees.RegressionTree": [[19, 1, 1, "", "fit"], [19, 1, 1, "", "predict"]], "DLL.MachineLearning.UnsupervisedLearning.Clustering": [[21, 0, 1, "", "KMeansClustering"]], "DLL.MachineLearning.UnsupervisedLearning.Clustering.KMeansClustering": [[21, 4, 1, "", "centroids"], [21, 1, 1, "", "fit"], [21, 4, 1, "", "inertia"], [21, 1, 1, "", "predict"]], "DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction": [[22, 0, 1, "", "PCA"]], "DLL.MachineLearning.UnsupervisedLearning.DimensionalityReduction.PCA": [[22, 4, 1, "", "components"], [22, 4, 1, "", "explained_variance"], [22, 1, 1, "", "fit"], [22, 1, 1, "", "transform"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "py:attribute"}, "terms": {"0": [3, 4, 6, 7, 9, 13, 14, 15, 18, 19], "001": [9, 15], "01": 15, "05": [13, 14, 18, 21], "1": [7, 8, 14, 15, 16, 18, 19, 22], "10": [8, 13, 19, 21, 22], "100": [15, 21], "1e": [13, 14, 18, 21, 22], "2": [4, 19, 22], "25": 19, "3": [15, 17, 21], "32": 6, "5": [3, 6, 15, 18], "64": [2, 8], "8": 4, "9": [6, 9], "999": 9, "A": 19, "If": [19, 21, 22], "The": [10, 19, 21, 22], "_base": 14, "_from_multi": 18, "accuraci": 3, "activ": [0, 5], "adam": [5, 8, 13], "add": [8, 23], "after": 19, "algorithm": [19, 21], "along": [19, 22], "alpha": [14, 15, 16], "also": 22, "alwai": 22, "an": 19, "analysi": 22, "appli": [19, 21, 22], "appropri": 19, "arbitrari": 19, "atleast": 21, "auc": 3, "avail": 19, "averag": 19, "axi": 22, "axis_label": 15, "backward": [6, 8], "base": [2, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22], "batch_siz": [2, 8, 15], "batchnorm": 6, "batchnormalis": 5, "bay": [11, 12], "bce": 5, "been": [19, 21, 22], "befor": [10, 19, 21, 22], "bernoullinaivebay": 12, "best": 21, "beta1": 9, "beta2": 9, "binary_cross_entropi": 3, "binary_decod": 4, "binary_encod": 4, "binary_prob_to_predict": 3, "binaryencod": 4, "bool": 22, "boolean": 22, "bootstrap": 19, "c": 18, "calcul": [19, 22], "calculate_metr": 3, "call": [10, 19], "callback_frequ": [8, 15], "categorical_cross_entropi": 3, "cce": 5, "center": 22, "centroid": 21, "chosen": 21, "class": [2, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22], "classif": 19, "classifi": 19, "cluster": [11, 20], "column": [19, 21, 22], "compil": 8, "compon": 22, "comput": 22, "confusion_matrix": 3, "conv2d": 5, "core": [0, 5], "correct": [19, 21, 22], "correlation_length": 14, "correspond": [19, 21], "covariance_funct": 13, "cpu": [8, 13, 14, 18], "custom": 0, "data": [0, 2, 3, 4, 19, 21, 22], "data_split": 4, "data_typ": 8, "datapoint": 15, "dataread": [0, 1], "dcdy": 6, "decim": 15, "decisiontre": 12, "deep": 0, "deeplearn": [6, 7, 8, 9, 13, 15], "default": [19, 21, 22], "degre": 4, "delta": 7, "dens": 5, "depth": 19, "derivative_alpha": 14, "derivative_corr_len": 14, "derivative_funct": 14, "derivative_period": 14, "derivative_sigma": 14, "derivative_sigma_bia": 14, "detail": 23, "deviat": 22, "devic": [8, 13, 14, 18], "differ": 21, "dimension": [11, 20], "dimensionalityreduct": 22, "distanc": 21, "dll": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "dropout": 5, "each": [19, 21, 22], "elasticnet": 12, "elasticnetregress": 15, "entropi": 19, "epoch": [8, 13, 15, 18], "epochs_no_chang": 18, "epsilon": [13, 14, 18, 22], "euclidian": 17, "except": 0, "explain": 22, "explained_vari": 22, "extract": 22, "f1_score": 3, "fals": [2, 3, 6, 8, 13, 15, 18], "featur": [19, 21, 22], "final": 21, "find": 21, "fit": [4, 8, 10, 13, 15, 16, 17, 18, 19, 21, 22], "flatten": 5, "float": 21, "float32": 8, "forward": 6, "fpr": 3, "from": 22, "gaussian": [11, 12, 17], "gaussiannaivebay": 12, "gaussianprocess": 13, "gaussianprocessregressor": 12, "gener": 19, "generate_sect": 6, "get_data": 2, "get_paramet": 6, "gradient": 7, "gradientboostingclassifi": 12, "gradientboostingregressor": 12, "groupnorm": 6, "groupnormalis": 5, "ha": [19, 21, 22], "hidden_s": 6, "huber": 5, "huber_loss": 3, "i": [10, 19, 21, 22], "image_batch": 6, "implement": [19, 21], "individu": 19, "inertia": 21, "inf": 18, "init": 21, "initi": 21, "initial_gradi": 8, "initialis": 21, "initialise_lay": 6, "initialise_paramet": 9, "input": [5, 8, 19, 21, 22], "input_shap": [6, 8], "instancenorm": 6, "instancenormalis": 5, "int": [19, 21, 22], "integ": [19, 21, 22], "inverse_transform": 4, "iter": 21, "k": [17, 21], "keep": 22, "kernel": [11, 12, 18], "kernel_s": 6, "kmean": 20, "kmeansclust": 21, "knearestneighborsclassifi": 12, "knearestneighborsregressor": 12, "knnclassifi": 17, "knnregressor": 17, "kwarg": [2, 6, 8], "l1_ratio": 15, "label": [19, 21], "lasso": 15, "lassoregress": 12, "layer": [0, 5, 8], "layernorm": 6, "layernormalis": 5, "leaf": 19, "learn": [0, 11], "learning_r": [9, 15, 19], "linear": [11, 12], "linearcovari": [12, 14], "linearmodel": 15, "linearregress": 12, "log_marginal_likelihood": 13, "logisticregress": 12, "loss": [0, 3, 5, 8, 15], "lstm": 5, "machin": [11, 12], "machinelearn": [0, 13, 14, 15, 16, 17, 18, 19, 21, 22], "mae": 5, "make": 19, "mani": 19, "matrix": [19, 21, 22], "max_depth": 19, "max_it": 21, "maximum": [19, 21], "maxpooling2d": 5, "mean": 21, "mean_absolute_error": 3, "mean_squared_error": 3, "messag": 10, "method": 21, "metric": [0, 1, 8, 15, 17], "min_samples_split": 19, "minim": 19, "minimum": 19, "minmaxscal": 4, "model": [0, 5, 10, 11, 12, 19, 21, 22], "model_color": 15, "model_label": 15, "model_opac": 15, "model_paramet": 9, "modul": 12, "momentum": 9, "mse": [5, 8, 15], "multi_method": 18, "multinomialnaivebay": 12, "must": [19, 21, 22], "n_class": 19, "n_compon": 22, "n_featur": [19, 21, 22], "n_init": 21, "n_sampl": [19, 21, 22], "n_tree": 19, "naiv": [11, 12], "naivebay": 16, "nearest": 21, "neighbor": [11, 12], "nois": [13, 14], "none": [3, 6, 8, 15, 19, 21, 22], "normal": 22, "normalis": 6, "notfittederror": [0, 10, 19, 21, 22], "num_group": 6, "number": [19, 21, 22], "object": [2, 4, 7, 8, 9, 13, 15, 16, 17, 18, 19, 21, 22], "one_hot_decod": 4, "one_hot_encod": 4, "onehotencod": 4, "optimis": [0, 5, 8, 13, 15], "option": [19, 21, 22], "order": 19, "output_depth": 6, "output_shap": 6, "ovr": 18, "p": 6, "paramet": [10, 14, 19, 21, 22], "partit": 21, "pass": 10, "patienc": 6, "pca": 20, "period": 14, "periodiccovari": [12, 14], "plot": 15, "plot_residu": 15, "point": 21, "polynomialfeatur": 4, "pool_siz": 6, "posit": [19, 21, 22], "precis": 3, "predict": [3, 7, 8, 13, 15, 16, 17, 18, 19, 21], "predict_proba": [16, 19], "predictiong": 19, "preprocess": [0, 1], "princip": 22, "probabl": [3, 19], "process": [11, 12], "pytorch": [19, 21, 22], "rais": [10, 19, 21, 22], "random": 21, "randomforestclassifi": 12, "randomforestregressor": 12, "rationalquadraticcovari": [12, 14], "recal": 3, "reduc": 22, "reduct": [11, 20], "regress": [15, 19], "regressiontre": 12, "regularis": [0, 5], "relu": 5, "requir": 19, "reshap": 5, "restructuredtext": 23, "return": [19, 21, 22], "ridg": 15, "ridgeregress": 12, "rnn": 5, "roc_curv": 3, "root_mean_squared_error": 3, "row": [19, 21, 22], "sampl": [19, 21, 22], "scatter_color": 15, "scatter_label": 15, "see": 23, "select": 22, "set_output_shap": 6, "sgd": 5, "shape": [19, 21, 22], "shuffl": 2, "shuffle_data": [8, 15], "shuffle_every_epoch": [2, 8, 15], "sigma": 14, "sigma_bia": 14, "sigmoid": 5, "so": 22, "softmax": 5, "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22], "space": 22, "split": 19, "squar": 21, "squaredexponentialcovari": [12, 14, 18], "standard": 22, "standardscal": 4, "string": 10, "summari": [6, 8, 15], "supervis": [0, 11], "supervisedlearn": [13, 14, 15, 16, 17, 18, 19], "support": [11, 12], "supportvectormachin": 18, "svc": 12, "svcsmo": 12, "svr": 12, "syntax": 23, "tanh": 5, "target": 19, "tensor": [19, 21, 22], "threshold": 3, "titl": 15, "tol": [18, 21], "torch": [8, 19, 21, 22], "total": 21, "tpr": 3, "train": [6, 8, 21], "train_kernel": 13, "train_split": 4, "transform": [4, 10, 22], "tree": [11, 12], "true": [2, 8, 15, 22], "true_output": [3, 7], "type": [8, 13, 14, 18, 19, 21, 22], "typeerror": [19, 21, 22], "unsupervisedlearn": [0, 11, 21, 22], "updat": 14, "update_paramet": 9, "us": [19, 23], "val_data": [8, 15], "valid": 3, "validation_split": 4, "valu": 19, "valueerror": [19, 21, 22], "varianc": [19, 22], "vector": [11, 12], "verbos": [8, 13, 15], "weight": 17, "when": 10, "where": [19, 21, 22], "whether": 22, "which": [10, 19, 21], "whitegaussiancovari": [12, 14], "x": [2, 4, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22], "x1": 14, "x2": 14, "x_new": 22, "y": [2, 4, 8, 13, 15, 16, 17, 18, 19], "yield": 19, "your": 23, "z": 15}, "titles": ["DLL", "Data", "DataReader", "Metrics", "Preprocessing", "Deep learning", "Core layers", "Losses", "Models", "Optimisers", "Custom exceptions", "MachineLearning", "Supervised learning", "Gaussian processes", "Kernels", "Linear models", "Naive Bayes", "Neighbors", "Support vector machines", "Trees", "UnsupervisedLearning", "Clustering", "Dimensionality reduction", "Deep learning library documentation"], "titleterms": {"activ": 6, "adam": 9, "batchnormalis": 6, "bay": 16, "bce": 7, "bernoullinaivebay": 16, "cce": 7, "cluster": 21, "content": 23, "conv2d": 6, "core": 6, "custom": 10, "data": 1, "dataread": 2, "decisiontre": 19, "deep": [5, 23], "dens": 6, "dimension": 22, "dll": 0, "document": 23, "dropout": 6, "elasticnet": 15, "except": 10, "flatten": 6, "gaussian": 13, "gaussiannaivebay": 16, "gaussianprocessregressor": 13, "gradientboostingclassifi": 19, "gradientboostingregressor": 19, "groupnormalis": 6, "huber": 7, "input": 6, "instancenormalis": 6, "kernel": 14, "kmean": 21, "knearestneighborsclassifi": 17, "knearestneighborsregressor": 17, "lassoregress": 15, "layer": 6, "layernormalis": 6, "learn": [5, 12, 23], "librari": 23, "linear": 15, "linearregress": 15, "logisticregress": 15, "loss": 7, "lstm": 6, "machin": 18, "machinelearn": 11, "mae": 7, "maxpooling2d": 6, "metric": 3, "model": [8, 15], "modul": 16, "mse": 7, "multinomialnaivebay": 16, "naiv": 16, "neighbor": 17, "optimis": 9, "pca": 22, "preprocess": 4, "process": 13, "randomforestclassifi": 19, "randomforestregressor": 19, "reduct": 22, "regressiontre": 19, "regularis": 6, "relu": 6, "reshap": 6, "ridgeregress": 15, "rnn": 6, "sgd": 9, "sigmoid": 6, "softmax": 6, "supervis": 12, "support": 18, "svc": 18, "svcsmo": 18, "svr": 18, "tanh": 6, "tree": 19, "unsupervisedlearn": 20, "vector": 18}})